<%-include('../layouts/adminHeader.ejs')%>
<%-include('../layouts/adminSidebar.ejs')%>

<div class="page-wrapper">
    <div class="container-fluid">
        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-body">
                        <h4 class="card-title">Enter Product Details</h4>
                        <form action="/admin/submitProduct" method="POST" enctype="multipart/form-data" onsubmit="return validateForm()">
                            <div class="form-body">
                                <div class="form-group" >
                                    <div class="row">
                                        <label class="col-lg-2">Name</label>
                                        <div class="col-lg-10">
                                            <div class="row">
                                                
                                                <div class="col-md-11">
                                                    <input type="text" class="form-control" id="name" name="name"
                                                        placeholder="Enter Product Name">
                                                    <div id="nameContainer" class="text-danger"></div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group" >
                                    <div class="row">
                                        <label class="col-lg-2">Price</label>
                                        <div class="col-lg-10">
                                            <div class="row">
                                                
                                                <div class="col-md-11">
                                                    <input type="text" class="form-control" id="price" name="price"
                                                        placeholder="Enter Product Price">
                                                    <div id="priceContainer" class="text-danger"></div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group" >
                                    <div class="row">
                                        <label class="col-lg-2">Quantity</label>
                                        <div class="col-lg-10">
                                            <div class="row">
                                        
                                                <div class="col-md-11">
                                                    <input type="number" class="form-control" id="quantity" name="quantity"
                                                        placeholder="Enter Quantity">
                                                    <div id="quantityContainer" class="text-danger"></div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group" >
                                    <div class="row">
                                        <label class="col-lg-2">Category</label>
                                        <div class="col-lg-10">
                                            <div class="row">
                    
                                                <div class="col-md-11">
                                                    <!-- <form> -->
                                                        <div class="form-group mb-4">
                                                            
                                                            <select class="custom-select mr-sm-2" id="category" name="category">
                                                                <option value="" disabled selected>Choose Category</option>
                                                                <% categories.forEach(function(category) { %>
                                                                    <option value="<%= category._id %>"><%= category.name %></option>
                                                                <% }); %>
                                                            </select>
                                                            <div id="categoryContainer" class="text-danger"></div>
                                                        </div>
                                                    <!-- </form> -->
                                                </div>
                                                
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group" >
                                    <div class="row">
                                        <label class="col-lg-2">Description</label>
                                        <div class="col-lg-10">
                                            <div class="row">
                                                <div class="col-md-11">
                                                    <textarea class="form-control" rows="3" id="description" name="description"
                                                    placeholder="Text Here..."></textarea>
                                                    <div id="descriptionContainer" class="text-danger"></div>
                                                </div>
                                                
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="row">
                                        <label class="col-lg-2">Images</label>
                                        <div class="col-lg-10">
                                            <div class="row">
                                                <div class="col-md-6">
                                                    <input type="file" class="form-control-file" id="imageInput" multiple="multiple" onchange="previewImages()" accept="image/*" name="image">
                                                    <div id="imagePreview" class="d-flex flex-wrap mt-2"></div>
                                                    <input type="hidden" id="deletedImages" name="deletedImages" value=""> <!-- Hidden input to store deleted image filenames -->
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>                              
                            </div>

                            <!-- Image Preview -->
                            <div id="imagePreview" class="mt-3 thumbnail-container"></div>
                            <!-- Image Preview end -->
                            <div class="form-actions">
                                <div class="text-right">
                                    <button type="submit" class="btn btn-info">Submit</button>
                                    <button type="reset" class="btn btn-dark">Reset</button>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>   
</div>


<script>
//FORM VALIDATION
document.addEventListener('DOMContentLoaded', function () {
        // Add input event listeners to clear warning messages when the user starts typing
        addInputEventListener('name');
        addInputEventListener('price');
        addInputEventListener('quantity');
        addInputEventListener('category');
        addInputEventListener('description');
        addInputEventListener('imageInput');
    });

    function addInputEventListener(fieldName) {
        var inputField = document.getElementById(fieldName);
        inputField.addEventListener('input', function () {
            clearWarningMessage(fieldName);
        });
    }

    function validateForm() {
        var name = document.getElementById('name').value.trim();
        var price = document.getElementById('price').value.trim();
        var quantity = document.getElementById('quantity').value.trim();
        var category = document.getElementById('category').value.trim();
        var description = document.getElementById('description').value.trim();
        var imageCount = document.getElementById('imageInput').files.length;

        // Clear previous warning messages
        clearWarningMessages();

        // Perform validation
        if (name === '') {
            displayWarningMessage('name', 'Please enter a valid product name.');
            return false;
        }

        if (price === '') {
            displayWarningMessage('price', 'Please enter a valid product price.');
            return false;
        }

        if (isNaN(price) || parseFloat(price) <= 0) {
            displayWarningMessage('price', 'Please enter a valid positive numeric price.');
            return false;
        }

        if (quantity === '') {
            displayWarningMessage('quantity', 'Please enter a valid quantity.');
            return false;
        }

        if (isNaN(quantity) || parseInt(quantity) <= 0) {
            displayWarningMessage('quantity', 'Please enter a valid positive numeric quantity.');
            return false;
        }

        if (category === 'Choose...') {
            displayWarningMessage('category', 'Please select a valid category.');
            return false;
        }

        if (description === '') {
            displayWarningMessage('description', 'Please enter a valid product description.');
            return false;
        }

        if (imageCount !== 4) {
            displayWarningMessage('imageInput', 'Please select exactly 4 images.');
            return false;
        }

        if (imageRemoved) {
            saveChanges();
            return false;
        }

        return true;
    }

    function displayWarningMessage(fieldName, message) {
        var warningMessage = document.createElement('div');
        warningMessage.className = 'text-danger';
        warningMessage.textContent = message;

        document.getElementById(fieldName + 'Container').appendChild(warningMessage);
    }

    function clearWarningMessage(fieldName) {
        var warningMessageContainer = document.getElementById(fieldName + 'Container');
        warningMessageContainer.querySelector('.text-danger').innerHTML = '';
    }

    function clearWarningMessages() {
    
        var warningMessageContainers = document.querySelectorAll('.text-danger');
        warningMessageContainers.forEach(function (container) {
            container.innerHTML = '';
        });
    }


    let imageRemoved = false;

    function removeImage(button, event) {
    event.preventDefault();
    let imageContainer = button.parentNode;
    imageContainer.remove(); // Remove the image preview container from the DOM

    // Update the deleted images list
    let deletedImagesInput = document.getElementById('deletedImages');
    let deletedImages = deletedImagesInput.value ? JSON.parse(deletedImagesInput.value) : [];
    let imageSrc = imageContainer.querySelector('img').src;
    let imageName = imageSrc.substring(imageSrc.lastIndexOf('/') + 1);
    deletedImages.push(imageName);
    deletedImagesInput.value = JSON.stringify(deletedImages);
}

// Function to preview images
function previewImages() {
        let input = document.getElementById('imageInput');
        let previewContainer = document.getElementById('imagePreview');
        let files = input.files;

        // Clear previous previews
        previewContainer.innerHTML = '';

        for (let i = 0; i < files.length; i++) {
            let file = files[i];
            let reader = new FileReader();

            // Check if the file is an image
            if (!file.type.startsWith('image/')) {
                displayErrorMessage('Please select only image files.');
                input.value = ''; // Clear the file input
                return; // Exit the function
            }

            reader.onload = function (e) {
                // Create image preview container
                let imageContainer = document.createElement('div');
                imageContainer.classList.add('image-wrapper', 'mr-3', 'mb-3');

                let image = document.createElement('img');
                image.src = e.target.result;

                image.style.maxWidth = '100px';
                image.style.maxHeight = '100px';

                image.classList.add('img-thumbnail');
                imageContainer.appendChild(image);

                // Create remove button
                let removeButton = document.createElement('button');
                removeButton.textContent = 'Remove';
                removeButton.classList.add('btn', 'btn-danger', 'btn-sm', 'ml-2');

                removeButton.addEventListener('click', function () {
                    removeImage(this, event); // Call removeImage function passing the button and event
                });
                imageContainer.appendChild(removeButton);

                previewContainer.appendChild(imageContainer);
            };

            reader.readAsDataURL(file);
        }
    }

function displayErrorMessage(message) {
    let errorMessage = document.createElement('div');
    errorMessage.classList.add('text-danger');
    errorMessage.textContent = message;

    // Add the error message to the page
    document.getElementById('imageInput').parentNode.appendChild(errorMessage);
}

// Function to update product image array
function updateProductImageArray() {
    let productObject = JSON.parse(product);
    let previewContainer = document.getElementById('imagePreview');
    let imageContainers = previewContainer.getElementsByClassName('image-wrapper');
    productObject.image = Array.from(imageContainers).map(container => {
        let imageSrc = container.querySelector('img').src;
        let imageName = imageSrc.substring(imageSrc.lastIndexOf('/') + 1);
        return imageName;
        previewImages()
    });
}

</script>

<%-include('../layouts/adminFooter.ejs')%>